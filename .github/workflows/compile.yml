name: Release

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --verbose

    - name: Install Inno Setup
      run: |
        choco install innosetup -y

    - name: Get release version
      id: get_version
      run: |
        $version = "${{ github.event.release.tag_name }}" -replace '^v', ''
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Create installer with version
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /DMyAppVersion="$version" assets\installer.iss
      shell: pwsh

    - name: Rename installer
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        Move-Item "assets\Output\swarm-setup.exe" "assets\Output\swarm-setup-$version.exe"
      shell: pwsh

    - name: Upload installer to release
      uses: softprops/action-gh-release@v1
      with:
        files: assets/Output/swarm-setup-${{ steps.get_version.outputs.version }}.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload binary to release
      uses: softprops/action-gh-release@v1
      with:
        files: target/release/swarm.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
